<?xml version="1.0" encoding="utf-8"?>
<ODX MODEL-VERSION="2.2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="odx.xsd">
  <COMPARAM-SUBSET ID="ISO_11898_RAW_TRANS" CATEGORY="TRANS">
    <SHORT-NAME>ISO_11898_RAW_TRANS</SHORT-NAME>
    <LONG-NAME>ISO 11898 RAW TRANS</LONG-NAME>
    <COMPARAMS>
      <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanFillerByte" PARAM-CLASS="COM" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
        <SHORT-NAME>CP_CanFillerByte</SHORT-NAME>
        <LONG-NAME>CP_CanFillerByte</LONG-NAME>
        <DESC>
          <p>Padding data byte to be used to pad all USDT type transmits frames (SF, FC, and last CF)</p>
          <p>NOTE: The padding data byte value is typically 0x00, 0x55, or 0xAA.</p>
        </DESC>
        <PHYSICAL-DEFAULT-VALUE>00</PHYSICAL-DEFAULT-VALUE>
        <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT8_HEX" />
      </COMPARAM>
      <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanFillerByteHandling" PARAM-CLASS="COM" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
        <SHORT-NAME>CP_CanFillerByteHandling</SHORT-NAME>
        <LONG-NAME>CP_CanFillerByteHandling</LONG-NAME>
        <DESC>
          <p>Enable Padding, forcing the DLC of a CAN frame to always be 8</p>
        </DESC>
        <PHYSICAL-DEFAULT-VALUE>Disabled</PHYSICAL-DEFAULT-VALUE>
        <DATA-OBJECT-PROP-REF ID-REF="TEXTTABLE_UINT1_Disabled_Enabled" />
      </COMPARAM>
      <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CyclicRespTimeout" PARAM-CLASS="TIMING" CPTYPE="STANDARD" CPUSAGE="TESTER">
        <SHORT-NAME>CP_CyclicRespTimeout</SHORT-NAME>
        <LONG-NAME>CP_CyclicRespTimeout</LONG-NAME>
        <DESC>
          <p>This ComParam is used for ComPrimitives that have a NumRecvCycles set to IS-CYCLIC (-1, infinite).</p>
          <p>The timer is enabled after the first positive response is received from an ECU. If CP_CyclicRespTimeout = 0, there is no receive timing enabled for the infinite receive ComPrimitive.</p>
        </DESC>
        <PHYSICAL-DEFAULT-VALUE>0</PHYSICAL-DEFAULT-VALUE>
        <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT32_MicroSecond" />
      </COMPARAM>
      <COMPARAM ID="ISO_11898_RAW_TRANS.CP_P2Max" PARAM-CLASS="TIMING" CPTYPE="STANDARD" CPUSAGE="TESTER">
        <SHORT-NAME>CP_P2Max</SHORT-NAME>
        <LONG-NAME>CP_P2Max</LONG-NAME>
        <DESC>
          <p>Timeout in receiving an expected frame
after a successful transmit complete</p>
          <p>Also used for
multiple ECU responses</p>
        </DESC>
        <PHYSICAL-DEFAULT-VALUE>150000</PHYSICAL-DEFAULT-VALUE>
        <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT27_0_125000000_MicroSecond" />
      </COMPARAM>
	  <COMPARAM ID="ISO_11898_RAW_TRANS.CP_SendRemoteFrame" PARAM-CLASS="COM" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
        <SHORT-NAME>CP_SendRemoteFrame</SHORT-NAME>
        <LONG-NAME>CP_SendRemoteFrame</LONG-NAME>
        <DESC>
          <p>This ComParam is used for CAN remote frame handling.</p>
          <p>(No data bytes are transmitted. Just the CAN ID. The first byte of the PDU Data shall contain the Data Length Code.)</p>
        </DESC>
        <PHYSICAL-DEFAULT-VALUE>No Remote Frame Transmit</PHYSICAL-DEFAULT-VALUE>
        <DATA-OBJECT-PROP-REF ID-REF="TEXTTABLE_UINT1_SendRemoteFrame" />
      </COMPARAM>
    </COMPARAMS>
    <COMPLEX-COMPARAMS>
      <COMPLEX-COMPARAM ID="ISO_11898_RAW_TRANS.CP_UniqueRespIdTable" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM" ALLOW-MULTIPLE-VALUES="true">
        <SHORT-NAME>CP_UniqueRespIdTable</SHORT-NAME>
        <LONG-NAME>CP_UniqueRespIdTable</LONG-NAME>
        <DESC>
          <p>The purpose of this communication parameter is to provide a table that allows the D-server to map the ECU responses to functional requests to their physical source ECUs.</p>
        </DESC>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanPhysReqExtAddr" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanPhysReqExtAddr</SHORT-NAME>
          <LONG-NAME>CP_CanPhysReqExtAddr</LONG-NAME>
          <DESC>
            <p>Address extension for enhanced diagnostics</p>
            <p>The first byte of the requested CAN frame data contains the N_AE/N_TA byte followed by the correct number of PCI bytes.</p>
            <p>This ComParam is used for all transmitted CAN Frames that have the â??Can Address Extensionâ? bit set in the CanIdFormat.</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>0</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT8_HEX" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanPhysReqFormat" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanPhysReqFormat</SHORT-NAME>
          <LONG-NAME>CP_CanPhysReqFormat</LONG-NAME>
          <DESC>
            <p>CAN Format used for a physical address transmit</p>
            <p>See TEXTTABLE_UINT6_CanReqFormat</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>normal unsegmented 11-bit transmit</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="TEXTTABLE_UINT6_CanReqFormat" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanPhysReqId" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanPhysReqId</SHORT-NAME>
          <LONG-NAME>CP_CanPhysReqId</LONG-NAME>
          <DESC>
            <p>CAN ID used for a physical address transmit</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>2016</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT29_HEX" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanRespUUDTExtAddr" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanRespUUDTExtAddr</SHORT-NAME>
          <LONG-NAME>CP_CanRespUUDTExtAddr</LONG-NAME>
          <DESC>
            <p>Extended Address used for UUDT response if the CAN Format indicates address extension</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>0</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT8_HEX" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanRespUUDTFormat" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanRespUUDTFormat</SHORT-NAME>
          <LONG-NAME>CP_CanRespUUDTFormat</LONG-NAME>
          <DESC>
            <p>Received CAN Format for CAN ID without segmentation (Segment Type Bit must = 0)</p>
            <p>See TEXTTABLE_UINT4_0_10_CanRespUUDTFormat</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>normal unsegmented 11-bit receive</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="TEXTTABLE_UINT4_0_10_CanRespUUDTFormat" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_CanRespUUDTId" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="ECU-COMM">
          <SHORT-NAME>CP_CanRespUUDTId</SHORT-NAME>
          <LONG-NAME>CP_CanRespUUDTId</LONG-NAME>
          <DESC>
            <p>Received UUDT CAN ID from an ECU</p>
            <p>NOTE: 0xFFFFFFFF indicates that the ComParam is not used. This ComParam is used in the Unique Response Identifier Table for CAN protocols.</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>4294967295</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_UINT32_HEX_CanRespId" />
        </COMPARAM>
        <COMPARAM ID="ISO_11898_RAW_TRANS.CP_ECULayerShortName" PARAM-CLASS="UNIQUE_ID" CPTYPE="STANDARD" CPUSAGE="APPLICATION">
          <SHORT-NAME>CP_ECULayerShortName</SHORT-NAME>
          <LONG-NAME>CP_ECULayerShortName</LONG-NAME>
          <DESC>
            <p>This communication parameter is needed by the D-server to set up the correct Access Keys for every received response.</p>
          </DESC>
          <PHYSICAL-DEFAULT-VALUE>None</PHYSICAL-DEFAULT-VALUE>
          <DATA-OBJECT-PROP-REF ID-REF="IDENTICAL_ASCII_1_128_END_OF_PDU" />
        </COMPARAM>
      </COMPLEX-COMPARAM>
    </COMPLEX-COMPARAMS>
    <DATA-OBJECT-PROPS>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT27_0_125000000_MicroSecond">
        <SHORT-NAME>IDENTICAL_UINT27_0_125000000_MicroSecond</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT27_0_125000000_MicroSecond</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>125000000</UPPER-LIMIT>
        </INTERNAL-CONSTR>
        <UNIT-REF ID-REF="MicroSecond" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT32_MicroSecond">
        <SHORT-NAME>IDENTICAL_UINT32_MicroSecond</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT32_MicroSecond</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <UNIT-REF ID-REF="MicroSecond" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_ASCII_1_128_END_OF_PDU">
        <SHORT-NAME>IDENTICAL_ASCII_1_128_END_OF_PDU</SHORT-NAME>
        <LONG-NAME>IDENTICAL_ASCII_1_128_END_OF_PDU</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_ASCIISTRING" TERMINATION="END-OF-PDU" xsi:type="MIN-MAX-LENGTH-TYPE">
          <MAX-LENGTH>128</MAX-LENGTH>
          <MIN-LENGTH>1</MIN-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT11_0_1027">
        <SHORT-NAME>IDENTICAL_UINT11_0_1027</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT11_0_1027</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>1027</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT16_BlockSizeOverride">
        <SHORT-NAME>IDENTICAL_UINT16_BlockSizeOverride</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT16_BlockSizeOverride</LONG-NAME>
        <DESC>
          <p>65535 = Use the value reported by the vehicle</p>
        </DESC>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>65535</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT25_0_20000000_MicroSecond">
        <SHORT-NAME>IDENTICAL_UINT25_0_20000000_MicroSecond</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT25_0_20000000_MicroSecond</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>20000000</UPPER-LIMIT>
        </INTERNAL-CONSTR>
        <UNIT-REF ID-REF="MicroSecond" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT29_HEX">
        <SHORT-NAME>IDENTICAL_UINT29_HEX</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT29_HEX</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" DISPLAY-RADIX="HEX" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>536870911</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT32_HEX_CanRespId">
        <SHORT-NAME>IDENTICAL_UINT32_HEX_CanRespId</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT32_HEX_CanRespId</LONG-NAME>
        <DESC>
          <p>0xFFFFFFFF = indicates that the ComParam is not used.</p>
          <p>This ComParam is used in the Unique Response Identifier Table for CAN protocols</p>
        </DESC>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" DISPLAY-RADIX="HEX" />
        <INTERNAL-CONSTR>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>536870912</LOWER-LIMIT>
              <UPPER-LIMIT>4294967294</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT4_0_8">
        <SHORT-NAME>IDENTICAL_UINT4_0_8</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT4_0_8</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>8</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT4_HEX">
        <SHORT-NAME>IDENTICAL_UINT4_HEX</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT4_HEX</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" DISPLAY-RADIX="HEX" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>15</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT8">
        <SHORT-NAME>IDENTICAL_UINT8</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT8</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>255</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT8_HEX">
        <SHORT-NAME>IDENTICAL_UINT8_HEX</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT8_HEX</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" DISPLAY-RADIX="HEX" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>255</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="IDENTICAL_UINT32_MicroSecond_StMinOverride">
        <SHORT-NAME>IDENTICAL_UINT32_MicroSecond_StMinOverride</SHORT-NAME>
        <LONG-NAME>IDENTICAL_UINT32_MicroSecond_StMinOverride</LONG-NAME>
        <DESC>
          <p>0xFFFFFFFF = Use the value reported by the vehicle</p>
        </DESC>
        <COMPU-METHOD>
          <CATEGORY>IDENTICAL</CATEGORY>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UINT32" />
        <INTERNAL-CONSTR>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>2147483648</LOWER-LIMIT>
              <UPPER-LIMIT>4294967294</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
        <UNIT-REF ID-REF="MicroSecond" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="SCALE_LINEAR_UINT8_INT32_MicroSecond_StMin">
        <SHORT-NAME>SCALE_LINEAR_UINT8_INT32_MicroSecond_StMin</SHORT-NAME>
        <LONG-NAME>SCALE_LINEAR_UINT8_INT32_MicroSecond_StMin</LONG-NAME>
        <DESC>
          <p>0x00-0x7F: 0 Âµs-127.000 Âµs Resolution = 1 ms</p>
          <p>0xF1-0xF9: 100Âµs - 900Âµs Resolution = 100 Âµs</p>
          <p>use 3 COMPU-SCALEs for invertible linear computation between physical and internal value without overlapping ranges of physical value and domain A_INT32 with unit [Âµs]</p>
        </DESC>
        <COMPU-METHOD>
          <CATEGORY>SCALE-LINEAR</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <DESC>
                  <p>physical value 0 Âµs, internal value 0x00</p>
                </DESC>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-RATIONAL-COEFFS>
                  <COMPU-NUMERATOR>
                    <V>0</V>
                    <V>1000</V>
                  </COMPU-NUMERATOR>
                  <COMPU-DENOMINATOR>
                    <V>1</V>
                  </COMPU-DENOMINATOR>
                </COMPU-RATIONAL-COEFFS>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <DESC>
                  <p>physical value range 1000 ... 127000 Âµs, internal value range 0x01 ... 0x7F</p>
                </DESC>
                <LOWER-LIMIT>1</LOWER-LIMIT>
                <UPPER-LIMIT>127</UPPER-LIMIT>
                <COMPU-RATIONAL-COEFFS>
                  <COMPU-NUMERATOR>
                    <V>0</V>
                    <V>1000</V>
                  </COMPU-NUMERATOR>
                  <COMPU-DENOMINATOR>
                    <V>1</V>
                  </COMPU-DENOMINATOR>
                </COMPU-RATIONAL-COEFFS>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <DESC>
                  <p>physical value 100..900 Âµs, internal value 0xF1..0xF9</p>
                </DESC>
                <LOWER-LIMIT>241</LOWER-LIMIT>
                <UPPER-LIMIT>249</UPPER-LIMIT>
                <COMPU-RATIONAL-COEFFS>
                  <COMPU-NUMERATOR>
                    <V>-24000</V>
                    <V>100</V>
                  </COMPU-NUMERATOR>
                  <COMPU-DENOMINATOR>
                    <V>1</V>
                  </COMPU-DENOMINATOR>
                </COMPU-RATIONAL-COEFFS>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_INT32" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>249</UPPER-LIMIT>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-VALID">
              <LOWER-LIMIT>128</LOWER-LIMIT>
              <UPPER-LIMIT>240</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
        <UNIT-REF ID-REF="MicroSecond" />
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT1_Disabled_Enabled">
        <SHORT-NAME>TEXTTABLE_UINT1_Disabled_Enabled</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT1_Disabled_Enabled</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <LOWER-LIMIT>1</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>1</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT1_SendRemoteFrame">
        <SHORT-NAME>TEXTTABLE_UINT1_SendRemoteFrame</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT1_SendRemoteFrame</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <DESC>
                  <p>No Remote Frame Transmit</p>
                </DESC>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>No Remote Frame Transmit</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <DESC>
                  <p>Transmit a Remote Frame using the DLC in the PDU Data</p>
                </DESC>
                <LOWER-LIMIT>1</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Transmit remote frame</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>1</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT2_1_2_RequestAddrMode">
        <SHORT-NAME>TEXTTABLE_UINT2_1_2_RequestAddrMode</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT2_1_2_RequestAddrMode</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <DESC>
                  <p>Use Physical Addressing for the request</p>
                </DESC>
                <LOWER-LIMIT>1</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Physical</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <DESC>
                  <p>Use Functional Addressing for the request</p>
                </DESC>
                <LOWER-LIMIT>2</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Functional</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>1</LOWER-LIMIT>
          <UPPER-LIMIT>2</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT4_0_10_CanRespUUDTFormat">
        <SHORT-NAME>TEXTTABLE_UINT4_0_10_CanRespUUDTFormat</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT4_0_10_CanRespUUDTFormat</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- UUDT Message Receive (No Flow Control)</p>
                </DESC>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 11-bit receive</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- UUDT Message Receive (No Flow Control)</p>
                </DESC>
                <LOWER-LIMIT>2</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 29-bit receive</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x8</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- UUDT Message Receive (No Flow Control)</p>
                </DESC>
                <LOWER-LIMIT>8</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 11-bit receive</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0xA</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- UUDT Message Receive (No Flow Control)</p>
                </DESC>
                <LOWER-LIMIT>10</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 29-bit receive</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>10</UPPER-LIMIT>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>1</LOWER-LIMIT>
              <UPPER-LIMIT>1</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>3</LOWER-LIMIT>
              <UPPER-LIMIT>7</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>9</LOWER-LIMIT>
              <UPPER-LIMIT>9</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT4_4_15_CanRespUSDTFormat">
        <SHORT-NAME>TEXTTABLE_UINT4_4_15_CanRespUSDTFormat</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT4_4_15_CanRespUSDTFormat</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <SHORT-LABEL>0x4</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>4</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit receive w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x5</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>5</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit receive with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x6</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>6</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit receive w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x7</SHORT-LABEL>
                <DESC>
                  <p>- Normal addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>7</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit receive with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0xC</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>12</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit receive w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0xD</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>13</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit receive with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0xE</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>14</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit receive w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0xF</SHORT-LABEL>
                <DESC>
                  <p>- Extended addressing for Target (ECU)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control is sent when a First Frame is received</p>
                </DESC>
                <LOWER-LIMIT>15</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit receive with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>4</LOWER-LIMIT>
          <UPPER-LIMIT>15</UPPER-LIMIT>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>8</LOWER-LIMIT>
              <UPPER-LIMIT>11</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="TEXTTABLE_UINT6_CanReqFormat">
        <SHORT-NAME>TEXTTABLE_UINT6_CanReqFormat</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT6_CanReqFormat</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <SHORT-LABEL>0x00</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 11-bit transmit</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x02</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>2</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 29-bit transmit</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x04</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>4</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x05</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>5</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x06</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>6</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x07</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>7</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x08</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>8</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 11-bit transmit</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0A</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>10</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 29-bit transmit</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0C</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>12</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0D</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>13</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0E</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>14</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit w/o FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x0F</SHORT-LABEL>
                <DESC>
                  <p>- Use CP_CanFillerByteHandling for padding control</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>15</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit with FC</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x20</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>32</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 11-bit transmit with padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x22</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>34</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 29-bit transmit with padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x24</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>36</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit w/o FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x25</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>37</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit with FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x26</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>38</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit w/o FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x27</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>39</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit with FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x28</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>40</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 11-bit transmit with padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2A</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>42</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 29-bit transmit with padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2C</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>44</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit w/o FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2D</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>45</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit with FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2E</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>46</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit w/o FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x2F</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly disabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>47</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit with FC and padding disabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x30</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>48</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 11-bit transmit with padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x32</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>50</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal unsegmented 29-bit transmit with padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x34</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>52</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit w/o FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x35</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>53</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 11-bit transmit with FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x36</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>54</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit w/o FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x37</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Normal addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>55</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>normal segmented 29-bit transmit with FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x38</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>56</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 11-bit transmit with padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x3A</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- UUDT Message Transmit (No PCI Bytes)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>58</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended unsegmented 29-bit transmit with padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x3C</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>60</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit w/o FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x3D</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 11-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>61</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 11-bit transmit with FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x3E</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- No Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>62</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit w/o FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <SHORT-LABEL>0x3F</SHORT-LABEL>
                <DESC>
                  <p>- Padding explicitly enabled for this CAN Id (overwrite CP_CanFillerByteHandling)</p>
                  <p>- Extended addressing for Source (Tester)</p>
                  <p>- USDT Message Transmit (Segmented transmits)</p>
                  <p>- 29-bit CAN ID Size</p>
                  <p>- Flow Control frames are expected from Target (ECU)</p>
                </DESC>
                <LOWER-LIMIT>63</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>extended segmented 29-bit transmit with FC and padding enabled</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>63</UPPER-LIMIT>
          <SCALE-CONSTRS>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>1</LOWER-LIMIT>
              <UPPER-LIMIT>1</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>3</LOWER-LIMIT>
              <UPPER-LIMIT>3</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>9</LOWER-LIMIT>
              <UPPER-LIMIT>9</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>11</LOWER-LIMIT>
              <UPPER-LIMIT>11</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>16</LOWER-LIMIT>
              <UPPER-LIMIT>31</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>33</LOWER-LIMIT>
              <UPPER-LIMIT>33</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>35</LOWER-LIMIT>
              <UPPER-LIMIT>35</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>41</LOWER-LIMIT>
              <UPPER-LIMIT>41</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>43</LOWER-LIMIT>
              <UPPER-LIMIT>43</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>49</LOWER-LIMIT>
              <UPPER-LIMIT>49</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>51</LOWER-LIMIT>
              <UPPER-LIMIT>51</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>57</LOWER-LIMIT>
              <UPPER-LIMIT>57</UPPER-LIMIT>
            </SCALE-CONSTR>
            <SCALE-CONSTR VALIDITY="NOT-DEFINED">
              <LOWER-LIMIT>59</LOWER-LIMIT>
              <UPPER-LIMIT>59</UPPER-LIMIT>
            </SCALE-CONSTR>
          </SCALE-CONSTRS>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
      <DATA-OBJECT-PROP ID="CPSS.ISO_11898_RAW_TRANS.DOP.TEXTTABLE_UINT1_SwCan_HighVoltage">
        <SHORT-NAME>TEXTTABLE_UINT1_SwCan_HighVoltage</SHORT-NAME>
        <LONG-NAME>TEXTTABLE_UINT1_SwCan_HighVoltage</LONG-NAME>
        <COMPU-METHOD>
          <CATEGORY>TEXTTABLE</CATEGORY>
          <COMPU-INTERNAL-TO-PHYS>
            <COMPU-SCALES>
              <COMPU-SCALE>
                <DESC>
                  <p>Normal Message</p>
                </DESC>
                <LOWER-LIMIT>0</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>Normal</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
              <COMPU-SCALE>
                <DESC>
                  <p>High-Voltage Message</p>
                </DESC>
                <LOWER-LIMIT>1</LOWER-LIMIT>
                <COMPU-CONST>
                  <VT>High voltage</VT>
                </COMPU-CONST>
              </COMPU-SCALE>
            </COMPU-SCALES>
          </COMPU-INTERNAL-TO-PHYS>
        </COMPU-METHOD>
        <DIAG-CODED-TYPE BASE-DATA-TYPE="A_UINT32" xsi:type="STANDARD-LENGTH-TYPE">
          <BIT-LENGTH>32</BIT-LENGTH>
        </DIAG-CODED-TYPE>
        <PHYSICAL-TYPE BASE-DATA-TYPE="A_UNICODE2STRING" />
        <INTERNAL-CONSTR>
          <LOWER-LIMIT>0</LOWER-LIMIT>
          <UPPER-LIMIT>1</UPPER-LIMIT>
        </INTERNAL-CONSTR>
      </DATA-OBJECT-PROP>
    </DATA-OBJECT-PROPS>
    <UNIT-SPEC>
      <UNITS>
        <UNIT ID="Baud">
          <SHORT-NAME>Baud</SHORT-NAME>
          <LONG-NAME>Baud</LONG-NAME>
          <DISPLAY-NAME>Bd</DISPLAY-NAME>
        </UNIT>
        <UNIT ID="MicroSecond">
          <SHORT-NAME>MicroSecond</SHORT-NAME>
          <LONG-NAME>Micro-Second</LONG-NAME>
          <DISPLAY-NAME>Âµs</DISPLAY-NAME>
        </UNIT>
      </UNITS>
    </UNIT-SPEC>
  </COMPARAM-SUBSET>
</ODX>